#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"
# 采用commitlint 校验 规则配置:commitlint.config
npx --no -- commitlint --edit $1
# 这个是采用线上的
#npx --no-install commitlint --edit $1

#这个是采用 依赖包里面的 node_modules
#./node_modules/.bin/commitlint --edit

# npx husky add .husky/commit-msg 'npx --no-install commitlint --edit $1'

# 用 `` 可以将命令的输出结果赋值给变量
# 获取当前提交的 commit msg
commit_msg=$(cat $1)

# message 校验
msg_re="^(feat|fix|docs|style|refactor|perf|test|workflow|build|ci|chore|release|workflow)(\(.+\))?: .{1,100}"

if [[ ! $commit_msg =~ $msg_re ]]; then
    echo "\n不合法的 commit 消息提交格式，请使用正确的格式：\
    \nfeat: add comments\
    \nfix: handle events on blur (close #28)\
    \n详情请查看 git commit 提交规范：https://github.com/woai3c/Front-end-articles/blob/master/git%20commit%20style.md"

    # 异常退出
    exit 1
fi

# 获取用户 email
# email=$(git config user.email)
# email_re="@abc\.com"
# if [[ ! $email =~ $email_re ]]
# then
#     echo "此用户没有权限，具有权限的用户为： xxx@abc.com"

#     # 异常退出
#     exit 1
# fi
